<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gerad-Fashion</title>
    
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.4/gsap.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/gsap.min.js"
     integrity="sha512-7eHRwcbYkK4d9g/6tD/mhkf++eoTHwpNM9woBxtPUBWm67zeAfFC+HrdoE2GanKeocly/VxeLvIqwvCdk7qScg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <style>
     
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        @keyframes slideIn {
            from { transform: translateY(-100%); }
            to { transform: translateY(0); }
        }

        .logo-text {
            background: linear-gradient(135deg, #f97316, #ea580c);
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
            transition: all 0.3s ease;
        }

        .logo-text:hover {
            transform: scale(1.05);
        }

        .nav-link {
            position: relative;
        }

        .nav-link::after {
            content: '';
            position: absolute;
            bottom: -2px;
            left: 50%;
            width: 0;
            height: 2px;
            background-color: #f97316;
            transition: all 0.3s ease;
            transform: translateX(-50%);
        }

        .nav-link:hover::after {
            width: 100%;
        }

        .mobile-nav {
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            background: white;
            box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);
            z-index: 1000;
            animation: slideIn 0.3s ease-out;
        }

        .mobile-nav-item {
            transition: all 0.3s ease;
        }

        .mobile-nav-item.active {
            color: #f97316;
            transform: translateY(-4px);
        }

        .search-results {
            max-height: 70vh;
            overflow-y: auto;
            scrollbar-width: thin;
            scrollbar-color: #f97316 #f1f1f1;
        }

        .search-results::-webkit-scrollbar {
            width: 6px;
        }

        .search-results::-webkit-scrollbar-track {
            background: #f1f1f1;
        }

        .search-results::-webkit-scrollbar-thumb {
            background: #f97316;
            border-radius: 3px;
        }

        @media (max-width: 768px) {
            .desktop-nav {
                display: none;
            }

            .mobile-search-bar {
                position: fixed;
                top: 0;
                left: 0;
                right: 0;
                background: white;
                z-index: 1000;
                padding: 0.75rem;
                box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            }
        }
    </style>
</head>

<body class="bg-white relative  ">
   
    <!-- Desktop Header -->
    <header class="bg-white shadow-lg w-full transition-all duration-300 desktop-nav">
        <div class="container mx-auto px-4 py-2">
            <marquee behavior="scroll" direction="left" >
                <div id="info-tag-container" style="display: none; color: orange;"></div>
            </marquee>
            <div class="flex items-center justify-between">
                <!-- Logo -->
                <a href="/" class="text-3xl font-extrabold logo-text">
                    Gerad-Fashion
                </a>

                <!-- Main Navigation -->
                <nav class="hidden lg:flex space-x-8">
                    <a href="/" class="nav-link text-gray-800 hover:text-orange-500 transition-all duration-300">Home</a>
                    <a href="/products" class="nav-link text-gray-800 hover:text-orange-500 transition-all duration-300">Products</a>
                    <a href="/contact" class="nav-link text-gray-800 hover:text-orange-500 transition-all duration-300">Contact</a>
                    <a href="/about" class="nav-link text-gray-800 hover:text-orange-500 transition-all duration-300">About</a>
                </nav>

                <!-- Search Bar -->
                <div class="hidden md:flex items-end  max-w-md mx-4">
                    <div class="relative w-full">
                        <input type="text" id="search-input"
                            class="w-full pl-10 pr-4 py-2 rounded-full border border-gray-300 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent"
                            placeholder="Search products...">
                        <button id="search-button" class="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-orange-500">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>

                <!-- User Actions -->
                <div class="flex items-center space-x-6">
                    <% if (typeof user !== 'undefined' && user !== null) { %>
                        <div class="relative">
                            <button id="user-menu-button" class="flex items-center space-x-2 text-gray-800 hover:text-orange-500">
                                <i class="fas fa-user-circle text-xl"></i>
                                <span class="font-medium"><%= user.name %></span>
                            </button>
                            <div id="user-dropdown" class="hidden absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-xl">
                                <a href="/profile" class="block px-4 py-2 text-gray-800 hover:bg-orange-500 hover:text-white">Profile</a>
                                <a href="/logout" class="block px-4 py-2 text-gray-800 hover:bg-orange-500 hover:text-white">Logout</a>
                            </div>
                        </div>
                    <% } else { %>
                        <div class="flex items-center space-x-4">
                            <a href="/login" class="px-4 py-2 text-orange-500 border border-orange-500 rounded-full hover:bg-orange-500 hover:text-white transition-all duration-300">
                                Login
                            </a>
                            <a href="/signup" class="px-4 py-2 bg-orange-500 text-white rounded-full hover:bg-orange-600 transition-all duration-300">
                                Sign Up
                            </a>
                        </div>
                    <% } %>
                    
                    <!-- Cart and Wishlist -->
                    <div class="flex items-center space-x-4">
                        <a href="/wishlist" class="text-gray-800 hover:text-orange-500 relative">
                            <i class="fas fa-heart text-xl"></i>
                            <span class="wishlist-count-desktop absolute -top-2 -right-2 bg-orange-500 text-white text-xs w-5 h-5 rounded-full flex items-center justify-center hidden">0</span>
                        </a>
                        <button onclick="fetchCart()" class="text-gray-800 hover:text-orange-500 relative">
                            <i class="fas fa-shopping-cart text-xl"></i>
                            <span class="cart-count-desktop absolute -top-2 -right-2 bg-orange-500 text-white text-xs w-5 h-5 rounded-full flex items-center justify-center hidden">0</span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </header>


   <!-- Mobile Header -->
   <div class="mobile-search-bar md:hidden">
    <marquee behavior="scroll" direction="left" class="mb-2">
        <div id="mobile-info-tag-container" style="display: none; color: orange;"></div>
    </marquee>
    <div class="flex items-center justify-between px-4 py-2">
        <a href="/" class="text-2xl font-bold logo-text">Gerad-Fashion</a>
        <div class="relative flex-1 mx-4">
            <input type="text" id="mobile-search-input"
                class="w-full pl-10 pr-4 py-2 rounded-full border border-gray-300 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent text-sm"
                placeholder="Search...">
            <button id="mobile-search-button" class="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500">
                <i class="fas fa-search"></i>
            </button>
        </div>
    </div>
</div>

    <!-- Mobile Bottom Navigation -->
   <!--  Mobile Bottom Navigation -->
<nav class="mobile-nav md:hidden fixed bottom-0 left-0 right-0">
    <div class="grid grid-cols-5 gap-1 py-2 px-4">
        <a href="/" class="mobile-nav-item flex flex-col items-center space-y-1">
            <i class="fas fa-home text-xl"></i>
            <span class="text-xs">Home</span>
        </a>
        <a href="/products" class="mobile-nav-item flex flex-col items-center space-y-1">
            <i class="fas fa-shopping-bag text-xl"></i>
            <span class="text-xs">Shop</span>
        </a>
        <button onclick="fetchCart()" class="mobile-nav-item flex flex-col items-center space-y-1 relative">
            <i class="fas fa-shopping-cart text-xl"></i>
            <span class="cart-count-mobile absolute -top-1 right-0 bg-orange-500 text-white text-xs w-5 h-5 rounded-full flex items-center justify-center hidden">0</span>
            <span class="text-xs">Cart</span>
        </button>
        <a href="/wishlist" class="mobile-nav-item flex flex-col items-center space-y-1 relative">
            <i class="fas fa-heart text-xl"></i>
            <span class="wishlist-count-mobile absolute -top-1 right-0 bg-orange-500 text-white text-xs w-5 h-5 rounded-full flex items-center justify-center hidden">0</span>
            <span class="text-xs">Wishlist</span>
        </a>
        <div class="relative ml-3" >
            <% if (typeof user !== 'undefined' && user !== null) { %>
                <button onclick="toggleAccountMenu()" class="mobile-nav-item flex flex-col items-center space-y-1">
                    <i class="fas fa-user text-xl"></i>
                    <span class="text-xs">Account</span>
                </button>
                <!-- Account dropdown menu -->
                <div id="mobile-account-menu" class="hidden absolute bottom-full right-0 mb-2 w-48 bg-white rounded-lg shadow-xl">
                    <a href="/profile" class="block px-4 py-2 text-gray-800 hover:bg-orange-500 hover:text-white">Profile</a>
                    <a href="/logout" class="block px-4 py-2 text-gray-800 hover:bg-orange-500 hover:text-white">Logout</a>
                </div>
            <% } else { %>
                <button onclick="toggleAuthMenu()" class="mobile-nav-item flex flex-col items-center space-y-1">
                    <i class="fas fa-user text-xl"></i>
                    <span class="text-xs">Login</span>
                </button>
                <!-- Auth dropdown menu -->
                <div id="mobile-auth-menu" class="hidden absolute bottom-full right-0 mb-2 w-48 bg-white rounded-lg shadow-xl">
                    <a href="/login" class="block px-4 py-2 text-gray-800 hover:bg-orange-500 hover:text-white">
                        <i class="fas fa-sign-in-alt mr-2"></i>Login
                    </a>
                    <a href="/signup" class="block px-4 py-2 text-gray-800 hover:bg-orange-500 hover:text-white">
                        <i class="fas fa-user-plus mr-2"></i>Sign Up
                    </a>
                </div>
            <% } %>
        </div>
    </div>
</nav>


<script>
function toggleAuthMenu() {
    const menu = document.getElementById('mobile-auth-menu');
    menu.classList.toggle('hidden');
}

// Close auth menu when clicking outside
document.addEventListener('click', function(event) {
    const menu = document.getElementById('mobile-auth-menu');
    const authButton = event.target.closest('.mobile-nav-item');
    if (!authButton && menu && !menu.classList.contains('hidden')) {
        menu.classList.add('hidden');
    }
});

        // Mobile navigation active state
       
        // Cart fetch function
        async function fetchCart() {
            try {
                const response = await fetch('/cart', {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                });

                if (response.ok) {
                    window.location.href = '/cart';
                } else if (response.status === 401) {
                    window.location.href = '/login';
                } else {
                    console.error('Failed to fetch cart:', response.status);
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }

       

        
        document.addEventListener('DOMContentLoaded', () => {
            gsap.from('.header__logo, .header__menu, .header__nav__option', {
                opacity: 0,
                y: -20,
                duration: 0.5,
                stagger: 0.1,
                ease: 'power2.out'
            });
        });

// User Menu Dropdown Toggle
document.addEventListener('DOMContentLoaded', () => {
    const userMenuButton = document.getElementById('user-menu-button');
    const userDropdown = document.getElementById('user-dropdown');

    if (userMenuButton && userDropdown) {
        // Toggle dropdown
        userMenuButton.addEventListener('click', (e) => {
            e.stopPropagation();
            userDropdown.classList.toggle('hidden');
        });

        // Close dropdown when clicking outside
        document.addEventListener('click', (e) => {
            if (!userMenuButton.contains(e.target) && !userDropdown.contains(e.target)) {
                userDropdown.classList.add('hidden');
            }
        });
    }
});


function toggleAuthMenu() {
    const menu = document.getElementById('mobile-auth-menu');
    menu.classList.toggle('hidden');
}

// Close auth menu when clicking outside
document.addEventListener('click', function(event) {
    const menu = document.getElementById('mobile-auth-menu');
    const authButton = event.target.closest('.mobile-nav-item');
    if (!authButton && menu && !menu.classList.contains('hidden')) {
        menu.classList.add('hidden');
    }
});





    class ProductSearch {
    constructor(options = {}) {
        const { isMobile = false } = options;
        this.isMobile = isMobile;
        
      
        const inputId = isMobile ? 'mobile-search-input' : 'search-input';
        const buttonId = isMobile ? 'mobile-search-button' : 'search-button';
        
        this.searchInput = document.getElementById(inputId);
        this.searchButton = document.getElementById(buttonId);
        
      
        if (!this.searchInput || !this.searchButton) {
            console.warn(`Search elements not found for ${isMobile ? 'mobile' : 'desktop'} view`);
            return;
        }

       
        this.searchResults = document.createElement('div');
        this.searchResults.className = `search-results absolute w-full bg-white mt-1 rounded-lg shadow-lg z-50 hidden ${
            isMobile ? 'mobile-search-results' : ''
        }`;
        
        
        this.searchInput.parentNode.appendChild(this.searchResults);
        
      
        this.setupEventListeners();
        
  
        if (this.isMobile) {
            this.initializeMobilePosition();
        }
    }

    initializeMobilePosition() {
      
        this.searchResults.style.position = 'fixed';
        this.adjustMobileResultsPosition();

       
        window.addEventListener('scroll', this.debounce(() => {
            this.adjustMobileResultsPosition();
        }, 100));
    }

    adjustMobileResultsPosition() {
        if (!this.isMobile || !this.searchInput) return;
        
        const inputRect = this.searchInput.getBoundingClientRect();
        const safeAreaBottom = 10; 

        this.searchResults.style.top = `${inputRect.bottom}px`;
        this.searchResults.style.left = `${inputRect.left}px`;
        this.searchResults.style.width = `${inputRect.width}px`;
        this.searchResults.style.maxHeight = `${window.innerHeight - inputRect.bottom - safeAreaBottom}px`;
    }

    setupEventListeners() {
        // Search on input with debounce
        this.searchInput.addEventListener('input', this.debounce(() => {
            const query = this.searchInput.value.trim();
            if (query.length >= 2) {
                this.handleSearch(query);
            } else {
                this.hideResults();
            }
        }, 300));

        // Search on enter
        this.searchInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                e.preventDefault();
                this.performSearch(this.searchInput.value.trim());
            }
        });

        // Search on button click
        this.searchButton.addEventListener('click', () => {
            this.performSearch(this.searchInput.value.trim());
        });

        // Close results when clicking outside
        document.addEventListener('click', (e) => {
            if (!this.searchInput.contains(e.target) && !this.searchResults.contains(e.target)) {
                this.hideResults();
            }
        });
    }

    async handleSearch(query) {
        if (!query) {
            this.hideResults();
            return;
        }

        try {
            this.setLoadingState(true);
            const response = await fetch(`/api/products/search?query=${encodeURIComponent(query)}`, {
                headers: {
                    'Accept': 'application/json'
                }
            });
            
            if (!response.ok) throw new Error(`Search failed: ${response.statusText}`);

            const data = await response.json();
            
            if (data && data.success && Array.isArray(data.products)) {
                this.displayResults(data.products, query);
                if (this.isMobile) this.adjustMobileResultsPosition();
            } else {
                this.displayError('Invalid response format');
            }
        } catch (error) {
            console.error('Search error:', error);
            this.displayError('Failed to fetch search results');
        } finally {
            this.setLoadingState(false);
        }
    }

    displayResults(results, query) {
        if (!results || results.length === 0) {
            this.displayNoResults(query);
            return;
        }

        this.searchResults.classList.remove('hidden');
        this.searchResults.innerHTML = results
            .map(item => this.getResultItemTemplate(item, query))
            .join('');

        if (this.isMobile) {
            this.adjustMobileResultsPosition();
        }
    }

    displayNoResults(query) {
        this.searchResults.classList.remove('hidden');
        this.searchResults.innerHTML = this.getNoResultsTemplate(query);
        
        if (this.isMobile) {
            this.adjustMobileResultsPosition();
        }
    }

    getResultItemTemplate(item, query) {
        return `
            <div class="p-2 hover:bg-gray-100 cursor-pointer flex items-center gap-3" 
                 onclick="window.location.href='/products/${item._id}'">
                <img src="${this.escapeHtml(item.productImage)}" 
                     alt="${this.escapeHtml(item.productName)}" 
                     class="w-12 h-12 object-cover rounded">
                <div>
                    <div class="font-medium">
                        ${this.highlightMatch(item.productName, query)}
                    </div>
                    <div class="text-sm text-gray-600">
                        ${this.escapeHtml(item.brand)} | ${this.escapeHtml(item.category?.name || 'Unknown Category')}
                    </div>
                    <div class="text-sm font-semibold text-orange-500">
                        ₹${item.salePrice}
                    </div>
                </div>
            </div>`;
    }

    getNoResultsTemplate(query) {
        return `
            <div class="p-4 text-center">
                <div class="mb-2">
                    <i class="fas fa-search text-4xl text-gray-400"></i>
                </div>
                <div class="text-gray-600 font-medium mb-1">No products found</div>
                <div class="text-gray-500 text-sm">
                    No results found for "${this.escapeHtml(query)}".<br>
                    Try checking your spelling or using different keywords.
                </div>
            </div>`;
    }

    displayError(message) {
        this.searchResults.classList.remove('hidden');
        this.searchResults.innerHTML = `
            <div class="p-4 text-center text-red-500">
                <i class="fas fa-exclamation-circle mr-2"></i>
                ${this.escapeHtml(message)}
            </div>`;
        
        if (this.isMobile) {
            this.adjustMobileResultsPosition();
        }
    }

    setLoadingState(isLoading) {
        const icon = isLoading ? 
            '<i class="fas fa-spinner fa-spin"></i>' : 
            '<i class="fas fa-search"></i>';
        this.searchButton.innerHTML = icon;
    }

    async performSearch(query) {
        if (!query) return;

        try {
            window.location.href = `/products?search=${encodeURIComponent(query)}`;
        } catch (error) {
            console.error('Search error:', error);
            if (typeof Swal !== 'undefined') {
                Swal.fire({
                    icon: 'error',
                    title: 'Search Failed',
                    text: 'Please try again later',
                    timer: 2000
                });
            }
        }
    }

    hideResults() {
        this.searchResults.classList.add('hidden');
    }

    highlightMatch(text, query) {
        if (!query || !text) return this.escapeHtml(text);
        const regex = new RegExp(`(${this.escapeRegExp(query)})`, 'gi');
        return this.escapeHtml(text).replace(regex, '<mark class="bg-yellow-200">$1</mark>');
    }

    escapeHtml(str) {
        if (str === undefined || str === null) return '';
        const div = document.createElement('div');
        div.textContent = str;
        return div.innerHTML;
    }

    escapeRegExp(str) {
        return str.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
    }

    debounce(func, wait) {
        let timeout;
        return (...args) => {
            clearTimeout(timeout);
            timeout = setTimeout(() => func.apply(this, args), wait);
        };
    }

    static init() {
        
        const existingResults = document.querySelectorAll('.search-results');
        existingResults.forEach(result => result.remove());

       
        if (document.getElementById('search-input')) {
            new ProductSearch({ isMobile: false });
        }

       
        if (document.getElementById('mobile-search-input')) {
            new ProductSearch({ isMobile: true });
        }
    }
}


document.addEventListener('DOMContentLoaded', () => {
    ProductSearch.init();
    
    
    let lastScroll = 0;
    const mobileSearchBar = document.querySelector('.mobile-search-bar');

    window.addEventListener('scroll', () => {
        const currentScroll = window.pageYOffset;
        
        if (currentScroll > lastScroll && currentScroll > 100) {
            mobileSearchBar?.classList.add('-translate-y-full');
        } else {
            mobileSearchBar?.classList.remove('-translate-y-full');
        }

        lastScroll = currentScroll;
    });
});


        function toggleAccountMenu() {
    const menu = document.getElementById('mobile-account-menu');
    menu.classList.toggle('hidden');
}


document.addEventListener('click', function(event) {
    const menu = document.getElementById('mobile-account-menu');
    const accountButton = event.target.closest('.mobile-nav-item');
    if (!accountButton && !menu.classList.contains('hidden')) {
        menu.classList.add('hidden');
    }
});


// marquee

document.addEventListener('DOMContentLoaded', async () => {
    try {
        const response = await fetch('/api/active-info-tag');
        const infoTag = await response.json();
        
        if (infoTag) {
         
            const desktopContainer = document.getElementById('info-tag-container');
            const mobileContainer = document.getElementById('mobile-info-tag-container');
            
            if (desktopContainer) {
                desktopContainer.textContent = infoTag.message;
                desktopContainer.style.display = 'block';
            }
            if (mobileContainer) {
                mobileContainer.textContent = infoTag.message;
                mobileContainer.style.display = 'block';
            }
        }
    } catch (error) {
        console.error('Error fetching info tag:', error);
    }
});



async function updateCartBadge() {
    try {
        const response = await fetch('/api/cart/count', {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
            }
        });
        
        if (response.ok) {
            const data = await response.json();
            const desktopBadge = document.querySelector('.cart-count-desktop');
            const mobileBadge = document.querySelector('.cart-count-mobile');
            
            if (data.count > 0) {
                if (desktopBadge) desktopBadge.textContent = data.count;
                if (mobileBadge) mobileBadge.textContent = data.count;
                
                desktopBadge?.classList.remove('hidden');
                mobileBadge?.classList.remove('hidden');
            } else {
                desktopBadge?.classList.add('hidden');
                mobileBadge?.classList.add('hidden');
            }
        }
    } catch (error) {
        console.error('Error fetching cart count:', error);
    }
}

async function updateWishlistBadge() {
    try {
        const response = await fetch('/api/wishlist/count', {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
            }
        });
        
        if (response.ok) {
            const data = await response.json();
            const desktopBadge = document.querySelector('.wishlist-count-desktop');
            const mobileBadge = document.querySelector('.wishlist-count-mobile');
            
            if (data.count > 0) {
                if (desktopBadge) desktopBadge.textContent = data.count;
                if (mobileBadge) mobileBadge.textContent = data.count;
                
                desktopBadge?.classList.remove('hidden');
                mobileBadge?.classList.remove('hidden');
            } else {
                desktopBadge?.classList.add('hidden');
                mobileBadge?.classList.add('hidden');
            }
        }
    } catch (error) {
        console.error('Error fetching wishlist count:', error);
    }
}


document.addEventListener('DOMContentLoaded', () => {
    updateCartBadge();
    updateWishlistBadge();
});

    </script>
</body>
</html>