<%- include("../partials/admin/header") %>
<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6 mt-60">
            <form id="categoryForm" method="post" action="/admin/editCategory/<%= category._id %>">
                <div class="mb-4 mt-30">
                    <label for="categoryName" class="form-label">Name</label>
                    <input type="text" 
                           id="categoryName" 
                           name="categoryName" 
                           value="<%= category.name %>" 
                           class="form-control border"
                           maxlength="50" />
                </div>
                
                <div class="mb-4">
                    <label class="form-label">Description</label>
                    <textarea id="description" 
                              name="description" 
                              class="form-control border"
                              maxlength="200"><%= category.description %></textarea>
                </div>

                <div class="d-grid text-end mt-30 col-md-5">
                    <button class="btn btn-primary" type="submit">Update category</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.getElementById('categoryForm').addEventListener('submit', function(event) {
        event.preventDefault();
        
        const categoryName = document.getElementById('categoryName').value.trim();
        const description = document.getElementById('description').value.trim();
        
        // Updated regex to allow numbers and some special characters
        const namePattern = /^[A-Za-z0-9\s&-]+$/; 
        let errors = [];

        // Validation checks
        if (categoryName === "") {
            errors.push("Category name cannot be empty");
        } else if (categoryName.length < 3) {
            errors.push("Category name must be at least 3 characters long");
        } else if (categoryName.length > 50) {
            errors.push("Category name cannot exceed 50 characters");
        } else if (!namePattern.test(categoryName)) {
            errors.push("Category name can only contain letters, numbers, spaces, & and -");
        }

        if (description === "") {
            errors.push("Description cannot be empty");
        } else if (description.length < 5) {
            errors.push("Description must be at least 5 characters long");
        } else if (description.length > 200) {
            errors.push("Description cannot exceed 200 characters");
        }

        if (errors.length > 0) {
            Swal.fire({
                icon: 'error',
                title: 'Validation Error',
                html: errors.join('<br>'),
                confirmButtonText: 'OK'
            });
        } else {
            submitForm();
        }
    });

    function submitForm() {
        const form = document.getElementById('categoryForm');
        const formData = {
            categoryName: document.getElementById('categoryName').value.trim(),
            description: document.getElementById('description').value.trim()
        };

        // Show loading state
        Swal.fire({
            title: 'Updating Category',
            text: 'Please wait...',
            allowOutsideClick: false,
            showConfirmButton: false,
            willOpen: () => {
                Swal.showLoading();
            }
        });

        fetch(form.action, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        })
        .then(async response => {
            const data = await response.json();
            
            if (!response.ok) {
                throw new Error(data.error || 'An error occurred while updating the category');
            }
            
            return data;
        })
        .then(data => {
            Swal.fire({
                icon: 'success',
                title: 'Success',
                text: data.message || 'Category updated successfully',
                confirmButtonText: 'OK'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = "/admin/category";
                }
            });
        })
        .catch(error => {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: error.message,
                confirmButtonText: 'OK'
            });
        });
    }

    // Optional: Add real-time validation feedback
    const categoryNameInput = document.getElementById('categoryName');
    const descriptionInput = document.getElementById('description');

    categoryNameInput.addEventListener('input', function() {
        this.value = this.value.replace(/[^A-Za-z0-9\s&-]/g, '');
    });

    // Add character counters
    categoryNameInput.addEventListener('input', updateCharacterCount);
    descriptionInput.addEventListener('input', updateCharacterCount);

    function updateCharacterCount(e) {
        const maxLength = this.maxLength;
        const currentLength = this.value.length;
        
        // Create or update counter element
        let counter = this.nextElementSibling;
        if (!counter || !counter.classList.contains('char-counter')) {
            counter = document.createElement('small');
            counter.classList.add('char-counter', 'text-muted');
            this.parentNode.insertBefore(counter, this.nextSibling);
        }
        
        counter.textContent = `${currentLength}/${maxLength} characters`;
        
        // Visual feedback when approaching limit
        if (currentLength >= maxLength - 10) {
            counter.classList.add('text-danger');
        } else {
            counter.classList.remove('text-danger');
        }
    }
</script>

<style>
    .char-counter {
        display: block;
        margin-top: 5px;
        font-size: 0.8em;
    }
</style>

<%- include("../partials/admin/footer") %>