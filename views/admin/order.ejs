

<%- include("../../views/partials/admin/header") %>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Orders</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.4/gsap.min.js"></script>
    <style>
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        .fade-in {
            animation: fadeIn 0.5s ease-in-out;
        }
        .modal {
            display: none;
            position: fixed;
            z-index: 50;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.6);
            backdrop-filter: blur(5px);
            opacity: 0;
        }
        .modal-content {
            background-color: #fff;
            margin: 5% auto;
            padding: 20px;
            border-radius: 10px;
            width: 90%;
            max-width: 800px;
            max-height: 80vh;
            overflow-y: auto;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
            transform: translateY(-50px);
            opacity: 0;
        }
        .modal-open {
            opacity: 1;
            transform: translateY(0);
            transition: all 0.3s ease-out;
        }
        .close {
            cursor: pointer;
            float: right;
            font-size: 1.5rem;
            font-weight: bold;
            color: #888;
        }
        .close:hover {
            color: #333;
        }
    </style>



   
</head>
<body class="bg-gray-100 text-gray-900">

    <!-- Admin Dashboard Content Here -->
    <div class="container mx-auto my-10 px-4">
        <h1 class="text-4xl font-bold text-center mb-8 text-indigo-700">Admin Orders Dashboard</h1>
    
        <% if (message) { %>
            <p class="text-center text-red-500 mb-4"><%= message %></p>
        <% } else { %>
            <div class="mb-6 flex items-center justify-between bg-white p-1 rounded-lg shadow w-1/4 ml-auto">
                <div class="flex items-center space-x-4">
                    <label for="status-filter" class="text-sm font-medium text-gray-700">
                        Filter by Status:
                    </label>
                    <select
                        id="status-filter"
                        class="block w-40 rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
                        onchange="filterByStatus(this.value)"
                    >
                        <option value="All" <%= !selectedStatus ? 'selected' : '' %>>All Orders</option>
                        <option value="Pending" <%= selectedStatus === 'Pending' ? 'selected' : '' %>>Pending</option>
                        <option value="Processing" <%= selectedStatus === 'Processing' ? 'selected' : '' %>>Processing</option>
                        <option value="Shipped" <%= selectedStatus === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                        <option value="Delivered" <%= selectedStatus === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                        <option value="Cancelled" <%= selectedStatus === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                    </select>
                </div>
            </div>
            
            <div class="max-w-full overflow-hidden bg-white shadow-lg rounded-lg">
                <!-- Table Header Section -->
                <div class="p-5 border-b border-gray-200">
                    <h2 class="text-xl font-semibold text-gray-800">Order Management</h2>
                    <!-- filtering  -->
                    
                    
                </div>
                
                <!-- Table Container -->
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead>
                            <tr class="bg-gray-50">
                                <th scope="col" class="px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Customer</th>
                                <th scope="col" class="px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Order Details</th>
                                <th scope="col" class="px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Rate</th>
                                <th scope="col" class="px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Payment</th>
                                <th scope="col" class="px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                <th scope="col" class="px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
                                <th scope="col" class="px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            <% orders.forEach(order => { %>
                                <tr class="hover:bg-gray-50 transition-colors duration-200" data-order-id="<%= order._id %>">
                                    <!-- Customer Info -->
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="flex items-center">
                                            <div class="ml-4">
                                                <div class="text-sm font-medium text-gray-900"><%= order.address.name %></div>
                                                <div class="text-sm text-gray-500"><%= order.address.phone || 'No phone' %></div>
                                            </div>
                                        </div>
                                    </td>
            
                                    <!-- Order Details -->
                                    <td class="px-6 py-4">
                                        <div class="space-y-1 max-w-xs">
                                            <% order.orderedItems.forEach((item, index) => { %>
                                                <div class="flex justify-between text-sm <%= index !== 0 ? 'border-t border-gray-100 pt-1' : '' %>">
                                                    <span class="font-medium text-gray-900">
                                                        <%= item.product?.productName || 'Product Unavailable' %>
                                                        <span class="text-gray-500">x<%= item.quantity %></span>
                                                    </span>
                                                </div>
                                            <% }) %>
                                    
                                            <!-- Display Total Price -->
                                            <div class="text-sm font-semibold text-gray-900 pt-2">
                                                 Total: ₹<%= order.totalPrice %>
                                            </div>
                                    
                                            <!-- Display Delivery Charge if greater than 0 -->
                                            <% if (order.deliveryCharge > 0) { %>
                                                <div class="text-sm text-gray-500 pt-1">
                                                    Delivery Charge: ₹<%= order.deliveryCharge %>
                                                </div>
                                            <% } %>
                                    
                                            <!-- Display Coupon Discount if applied (greater than 0) -->
                                            <% if (order.discount > 0) { %>
                                                <div class="text-sm text-gray-500 pt-1">
                                                    Coupon Discount: -₹<%= order.discount %>
                                                </div>
                                            <% } %>
                                    
                                            <!-- Calculate Final Amount -->
                                            <% let finalAmount = order.totalPrice; %>
                                            <% if (order.deliveryCharge > 0) { finalAmount += order.deliveryCharge; } %>
                                            <% if (order.discount > 0) { finalAmount -= order.discount; } %>
                                    
                                            <!-- Display Final Amount -->
                                            <div class="text-sm font-semibold text-gray-900 pt-2">
                                                Final Amount: ₹<%= finalAmount.toFixed(1) %>
                                            </div>
                                        </div>
                                    </td>
                                    
                                    <td class="px-6 py-4">
                                        <div class="space-y-1 max-w-xs">
                                            <% order.orderedItems.forEach((item, index) => { %>
                                                <div class="flex justify-between text-sm <%= index !== 0 ? 'border-t border-gray-100 pt-1' : '' %>">
                                                    
                                                    <span class="text-gray-500">₹<%= item.product?.salePrice || '0' %></span>
                                                 
                                                </div>
                                            <% }) %>
                                           
                                        </div>
                                    </td>
            
                                    <!-- Payment Info -->
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="text-sm text-gray-900"><%= order.paymentMethod || 'N/A' %></div>
                                        <% if (order.coupon?.applied) { %>
                                            <div class="text-xs text-gray-500">
                                                Coupon: <%= order.coupon.code %>
                                            </div>
                                        <% } %>
                                    </td>
            
                                    <!-- Status -->
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <% const statusColors = {
                                            'Pending': 'yellow',
                                            'Processing': 'blue',
                                            'Shipped': 'indigo',
                                            'Delivered': 'green',
                                            'Cancelled': 'red'
                                        } %>
                                        <span class="px-3 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-<%= statusColors[order.status] %>-100 text-<%= statusColors[order.status] %>-800">
                                            <%= order.status %>
                                        </span>
                                    </td>
            
                                    <!-- Date -->
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                        <div><%= new Date(order.createdOn).toLocaleDateString('en-GB', { 
                                            day: '2-digit', 
                                            month: 'short', 
                                            year: 'numeric' 
                                        }) %></div>
                                        <div class="text-xs text-gray-400">
                                            <%= new Date(order.createdOn).toLocaleTimeString('en-GB', {
                                                hour: '2-digit',
                                                minute: '2-digit'
                                            }) %>
                                        </div>
                                    </td>
            
                                    <!-- Actions -->
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                        <button 
                                            onclick="openModal('<%= JSON.stringify(order) %>')"
                                            class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200"
                                        >
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                                            </svg>
                                            View Details
                                        </button>
                                    </td>
                                </tr>
                            <% }) %>
                        </tbody>
                    </table>
                </div>
            
                <!-- Table Footer -->
                <div class="px-6 py-4 bg-gray-50 border-t border-gray-200">
                    <div class="text-sm text-gray-500">
                        Showing <%= orders.length %> orders
                    </div>
                </div>
            </div>
    
            <!-- Pagination Controls -->
            <div class="mt-6 flex justify-center">
                <nav class="inline-flex">
                    <% for (let i = 1; i <= totalPages; i++) { %>
                        <a href="?page=<%= i %>" class="mx-1 px-4 py-2 text-sm font-medium <%= i === currentPage ? 'bg-indigo-600 text-white' : 'bg-gray-300 text-gray-700' %> rounded-md hover:bg-indigo-500 hover:text-white">
                            <%= i %>
                        </a>
                    <% } %>
                </nav>
            </div>
        <% } %>
    </div>
    
    

    <!-- Modal for showing order details -->
    <div id="orderModal" class="modal" role="dialog" aria-labelledby="orderDetailsTitle" aria-hidden="true">
        <div class="modal-content">
            <span class="close" aria-label="Close" onclick="closeModal()">&times;</span>
            <h2 id="orderDetailsTitle" class="text-2xl font-bold mb-4 text-indigo-700">Order Details</h2>
            <div id="orderDetails" class="space-y-4"></div>
        </div>
    </div>


   


    <script>





       function openModal(orderJSON) {
    const order = JSON.parse(orderJSON);
    const modal = document.getElementById('orderModal');
    const orderDetails = document.getElementById('orderDetails');
    
    const itemsDetails = order.orderedItems.map(item => `
        <div class="bg-gray-100 p-4 rounded-lg">
            <p class="font-semibold">${item.product ? item.product.productName : 'Product Name Not Available'}</p>
            <p>Quantity: ${item.quantity}</p>
            <p>Price: ₹${item.product ? item.product.salePrice : 'N/A'}</p>
        </div>
    `).join('');

    // Check order status
    const isOrderCancelled = order.status.toLowerCase() === 'cancelled';
    const isOrderDelivered = order.status.toLowerCase() === 'delivered';
    
    const isStatusLocked = isOrderDelivered || isOrderCancelled;

    // Generate status options (only if not delivered or cancelled)
    const statusDisplay = isStatusLocked 
        ? `<p class="mt-1 text-lg font-semibold text-gray-800">${order.status}</p>` 
        : `<select id="orderStatus" 
                class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md" 
                onchange="updateOrderStatus('${order._id}', this.value)">
                ${['Pending', 'Processing', 'Shipped', 'Delivered', 'Cancelled']
                    .map(status => `<option value="${status}" ${order.status === status ? 'selected' : ''}>${status}</option>`)
                    .join('')}
           </select>`;

    // Status message based on order state
    const statusMessage = isOrderDelivered 
        ? '<p class="text-green-600 mt-2">✓ Order has been delivered</p>'
        : isOrderCancelled 
            ? '<p class="text-red-600 mt-2">✕ Order has been cancelled</p>'
            : '';

            // Initialize the final amount with the total price
let finalAmount = order.totalPrice;

// Add delivery charge if it exists (greater than 0)
if (order.deliveryCharge > 0) {
    finalAmount += order.deliveryCharge;
}

// Subtract discount if it exists (greater than 0)
if (order.discount > 0) {
    finalAmount -= order.discount;
}

orderDetails.innerHTML = `
        <div class="space-y-4">

            <div>
                <h3 class="text-xl font-semibold mb-4">Order Status</h3>
                <div class="status-container">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Current Status:</label>
                    ${statusDisplay}
                    ${statusMessage}
                </div>
            </div>
            <div class="border-b pb-4">
                <h3 class="text-xl font-semibold mb-4">Order Information</h3>
                <p><strong>Order ID:</strong> ${order._id}</p>
                <p><strong>Order Date:</strong> ${new Date(order.createdOn).toLocaleDateString()}</p>
                <p><strong>Payment Method:</strong> ${order.paymentMethod || 'N/A'}</p>
            </div>                                                                                           


            <div class="border-b pb-4">
                <h3 class="text-xl font-semibold mb-4">Customer Details</h3>
                <p><strong>Name:</strong> ${order.address.name}</p>
                <p><strong>Phone:</strong> ${order.address?.phone || 'N/A'}</p>
                <p><strong>Address:</strong> ${order.address ? 
                    `${order.address.street}, ${order.address.city}, ${order.address.state} ${order.address.pincode}` : 
                    'N/A'}</p>
            </div>

            <div class="border-b pb-4">
                <h3 class="text-xl font-semibold mb-4">Ordered Items</h3>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    ${itemsDetails}
                </div>
            </div>

            <div class="border-b pb-4">
                <h3 class="text-xl font-semibold mb-4">Order Summary</h3>
                <p><strong>Delivery Charge:</strong> ₹${order.deliveryCharge > 0 ? order.deliveryCharge : 0}</p>
                <p><strong>Total Price:</strong> ₹${order.totalPrice}</p>
                ${order.discount > 0 ? 
                    `<p><strong>Discount:</strong> ₹${order.discount}</p>` : 
                    ''}
                <p><strong>Final Amount:</strong> ₹${finalAmount}</p>
            </div>

            
        </div>
    `;



    gsap.to(modal, {duration: 0.3, opacity: 1, display: 'block', ease: 'power2.out'});
    document.querySelector('.modal-content').classList.add('modal-open');
}

        function closeModal() {
            const modal = document.getElementById('orderModal');
            gsap.to(modal, {duration: 0.3, opacity: 0, display: 'none', ease: 'power2.in'});
            document.querySelector('.modal-content').classList.remove('modal-open');
        }
        function updateOrderStatus(orderId, newStatus) {
    console.log('Updating order status with:', { orderId, status: newStatus });
    
    fetch('/admin/update-order-status', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]')?.getAttribute('content')
        },
        body: JSON.stringify({ orderId, status: newStatus })
    })
    .then(response => {
        console.log('Response status:', response.status);
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
    })
    .then(data => {
        console.log('Response data:', data);
        showNotification(data.message);
        updateStatusInTable(orderId, newStatus);
        window.location.reload()
        closeModal();
    })
    .catch(error => {
        console.error('Error updating order status:', error);
        showNotification('Error updating order status. Please try again.');
    });
}

function updateStatusInTable(orderId, newStatus) {
    const statusCell = document.querySelector(`tr[data-order-id="${orderId}"] td:nth-child(6) span`);
    if (statusCell) {
        statusCell.textContent = newStatus;
        const statusColor = getStatusColor(newStatus);
        statusCell.className = `px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-${statusColor}-100 text-${statusColor}-800`;
    }
}

function getStatusColor(status) {
    switch(status.toLowerCase()) {
        case 'pending': return 'yellow';
        case 'processing': return 'blue';
        case 'shipped': return 'indigo';
        case 'delivered': return 'green';
        case 'cancelled': return 'red';
        default: return 'gray';
    }
}

function showNotification(message) {
    const notification = document.createElement('div');
    notification.textContent = message;
    notification.className = 'fixed bottom-4 right-4 bg-green-500 text-white px-4 py-2 rounded shadow-lg fade-in';
    document.body.appendChild(notification);
    setTimeout(() => {
        notification.remove();
    }, 3000);
}

window.onclick = function(event) {
    const modal = document.getElementById('orderModal');
    if (event.target == modal) {
        closeModal();
    }
}

function filterByStatus(status) {
    const currentUrl = new URL(window.location.href);
    if (status === 'All') {
        currentUrl.searchParams.delete('status');
    } else {
        currentUrl.searchParams.set('status', status);
    }
    // Reset to page 1 when filtering
    currentUrl.searchParams.set('page', '1');
    window.location.href = currentUrl.toString();
}
        
    </script>
</body>
</html>








