<%- include("../partials/user/header") %>



    <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Address Management - Fashion E-commerce</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Cormorant+Garamond:wght@400;500;600;700&family=Montserrat:wght@300;400;500;600;700&display=swap');
        
        body {
            font-family: 'Montserrat', sans-serif;
            background-color: #F8F7F4;
        }
        
        h1, h2, h3 {
            font-family: 'Cormorant Garamond', serif;
        }
        
        .fashion-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(229, 231, 235, 0.5);
        }
        
        .fashion-input {
            background: #F8F7F4;
            border: 1px solid #E5E7EB;
            transition: all 0.3s ease;
        }
        
        .fashion-input:focus {
            border-color: #1a1a1a;
            box-shadow: 0 0 0 2px rgba(26, 26, 26, 0.1);
        }
        
        .fashion-button {
            background: #1a1a1a;
            color: white;
            transition: all 0.3s ease;
        }
        
        .fashion-button:hover {
            background: #333333;
            transform: translateY(-2px);
        }

        .sidebar-link {
            transition: all 0.3s ease;
        }

        .sidebar-link:hover {
            background-color: #f3f4f6;
        }

        .sidebar-link.active {
            background-color: #f3f4f6;
            color: #000;
            font-weight: 500;
        }
    </style>
</head>
<body class="min-h-screen">

    
    <div class="container mx-auto px-4 py-12 max-w-7xl">
        <!-- Elegant Breadcrumb -->
        <nav aria-label="breadcrumb" class="mb-12">
            <ol class="flex items-center space-x-2 text-sm text-gray-600">
                <li><a href="/" class="hover:text-black transition-colors">Home</a></li>
                <li><span class="mx-2">/</span></li>
                <li><a href="/order" class="hover:text-black transition-colors">Orders</a></li>
            </ol>
        </nav>

        <!-- Main Content with Sidebar Layout -->
        <div class="flex flex-col lg:flex-row gap-8">
            <!-- Sidebar -->
            <aside class="lg:w-1/4">
                <div class="fashion-card rounded-xl p-8 static top-8">
                    <h2 class="text-3xl font-light mb-8 tracking-wide">ACCOUNT</h2>
                    <ul class="space-y-4">
                        <li>
                            <a href="/profile" class="sidebar-link block py-2 px-4 rounded-lg">
                                <i class="fas fa-user mr-3"></i> Profile
                            </a>
                        </li>
                        <li>
                            <a href="/address" class="sidebar-link block py-2 px-4 rounded-lg ">
                                <i class="fas fa-map-marker-alt mr-3"></i> Addresses
                            </a>
                        </li>
                        <li>
                            <a href="/order" class="sidebar-link block py-2 px-4 rounded-lg active">
                                <i class="fas fa-shopping-bag mr-3"></i> Orders
                            </a>
                        </li>
                        <li>
                            <a href="/wallet" class="sidebar-link block py-2 px-4 rounded-lg">
                                <i class="fas fa-wallet mr-3"></i> Wallet
                            </a>
                        </li>
                        <li>
                            <a href="/coupon" class="sidebar-link block py-2 px-4 rounded-lg">
                                <i class="fas fa-ticket-alt mr-3"></i> Coupons
                            </a>
                        </li>
                    </ul>
                </div>
            </aside>

            <!-- Main Content -->
            <main class="lg:w-3/4">
                <div class="min-h-screen bg-gray-50 py-8">
                    <div class="max-w-6xl mx-auto px-4">
                        <div class="bg-white shadow-xl rounded-xl overflow-hidden">
                            <div class="p-8">
                              <h2 class="text-3xl font-light text-gray-800 mb-8 tracking-tight">My Orders</h2>
                              <div class="space-y-8">
                                <% if (orders && orders.length > 0) { %>
                                  <% orders.forEach(function(order) { %>
                                    <div class="border border-gray-200 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-300">
                                      <!-- Order Header -->
                                      <div class="border-b border-gray-100 p-6">
                                        <div class="flex justify-between items-center">
                                          <div class="space-y-2">
                                            <h3 class="text-lg text-gray-700">
                                              <span class="font-light">Order</span> 
                                              <span class="font-medium">#<%= order._id %></span>
                                            </h3>
                                            <p class="text-sm text-gray-500">
                                              Placed on <%= helpers.formatDate(order.createdOn) %>
                                            </p>
                                          </div>
                                          <span class="px-4 py-1.5 text-sm font-medium rounded-full 
                                            <%= order.status === 'Pending' ? 'bg-amber-50 text-amber-700 border border-amber-200' : 
                                               order.status === 'Completed' ? 'bg-emerald-50 text-emerald-700 border border-emerald-200' : 
                                               order.status === 'Delivered' ? 'bg-blue-50 text-blue-700 border border-blue-200' :
                                               'bg-gray-50 text-gray-700 border border-gray-200' %>">
                                            <%= order.status %>
                                          </span>
                                        </div>
                                      </div>
                          
                                      <div class="p-6">
                                        <div class="grid md:grid-cols-2 gap-8">
                                          <!-- Ordered Items -->
                                          <div>
                                            <h4 class="text-sm uppercase tracking-wider text-gray-500 mb-4 font-medium">Ordered Items</h4>
                                            <ul class="space-y-6">
                                              <% order.orderedItems.forEach(function(item) { %>
                                                <li class="flex items-start space-x-4">
                                                  <div class="w-24 h-32 bg-gray-100 rounded-lg flex-shrink-0 overflow-hidden">
                                                    <img src="<%= item.productImage %>" alt="<%= item?.product?.productName || ' ' %>" class="w-full h-full object-cover">
                                                  </div>
                                                  <div class="flex-1 min-w-0">
                                                    <div class="flex justify-between items-start">
                                                      <div class="space-y-2">
                                                        <h5 class="font-medium text-gray-800 line-clamp-2">
                                                          <%= item.product?.productName || 'Product No Longer Available' %>
                                                        </h5>
                                                        <!-- Item Status Badge -->
                                                        <span class="inline-block px-2 py-1 text-xs rounded-full
                                                        <%= order.status === 'Delivered' ? 
                                                            (item.status === 'Return Requested' ? 'bg-purple-50 text-purple-700 border border-purple-200' :
                                                            item.status === 'Return Approved' ? 'bg-blue-50 text-blue-700 border border-blue-200' :
                                                            item.status === 'Returned' ? 'bg-gray-50 text-gray-700 border border-gray-200' :
                                                            item.status === 'Cancelled' ? 'bg-red-50 text-red-700 border border-red-200' :
                                                            'bg-emerald-50 text-emerald-700 border border-emerald-200') :
                                                            (item.status === 'Pending' ? 'bg-amber-50 text-amber-700 border border-amber-200' :
                                                            item.status === 'Cancelled' ? 'bg-red-50 text-red-700 border border-red-200' :
                                                            'bg-gray-50 text-gray-700 border border-gray-200') %>">
                                                        <%= order.status === 'Delivered' ? 
                                                            (item.status === 'Return Requested' ? 'Return Requested' :
                                                            item.status === 'Return Approved' ? 'Return Approved' :
                                                            item.status === 'Returned' ? 'Returned' :
                                                            item.status === 'Cancelled' ? 'Cancelled' :
                                                            'Delivered') :
                                                            item.status %>
                                                      </span>
                                                      </div>
                                                      <!-- Action Buttons -->
                                                      <div class="flex space-x-2 items-start">
                                                        <% if (item.status === 'Pending' && order.status !== 'Delivered') { %>
                                                          <button onclick="showCancelModal('<%= order._id %>', '<%= item._id %>', '<%= item?.product?.productName %>')" 
                                                                  class="text-sm text-red-600 hover:text-red-800 px-2 py-1 rounded">
                                                            Cancel
                                                          </button>
                                                        <% } %>
                                                        <% if (order.status === 'Delivered' && item.status !== 'Return Requested' && item.status !== 'Return Approved' && item.status !== 'Returned' && item.status !== "Cancelled") { %>
                                                          <button onclick="showReturnModal('<%= order._id %>')" 
                                                                  class="text-sm text-blue-600 hover:text-blue-800 px-2 py-1 rounded">
                                                            Return
                                                          </button>
                                                        <% } %>
                                                      </div>
                                                    </div>
                                                    <div class="mt-2 space-y-1">
                                                      <p class="text-sm text-gray-600">Quantity: <%= item.quantity %></p>
                                                      <p class="text-sm font-medium"><%= helpers.formatCurrency(item.price) %></p>
                                                    </div>
                                                  </div>
                                                </li>
                                              <% }); %>
                                            </ul>
                                          </div>
                          
                                          <!-- Order Details -->
                                          <div class="space-y-6">
                                            <!-- Payment Info -->
                                            <div>
                                              <h4 class="text-sm uppercase tracking-wider text-gray-500 mb-2 font-medium">Payment Method</h4>
                                              <p class="text-sm text-gray-700"><%= order.paymentMethod %></p>
                                            </div>
                          
                                            <!-- Order Summary -->
                                            <div class="bg-gray-50 p-6 rounded-lg">
                                              <h4 class="text-sm uppercase tracking-wider text-gray-500 mb-4 font-medium">Order Summary</h4>
                                              <div class="space-y-3">
                                                <div class="flex justify-between text-sm">
                                                  <span class="text-gray-600">Subtotal</span>
                                                  <span class="font-medium"><%= helpers.formatCurrency(order.totalPrice) %></span>
                                                </div>
                                                
                                                <div class="flex justify-between text-sm">
                                                  <span class="text-gray-600">Shipping</span>
                                                  <% if (order.deliveryCharge > 0) { %>
                                                    <span class="font-medium"><%= helpers.formatCurrency(order.deliveryCharge) %></span>
                                                  <% } else { %>
                                                    <span class="text-emerald-600 font-medium">Free</span>
                                                  <% } %>
                                                </div>
                          
                                                <% if (order.coupon && order.coupon.applied) { %>
                                                  <div class="flex justify-between text-sm">
                                                    <span class="text-emerald-600">Discount (<%= order.coupon.code %>)</span>
                                                    <span class="text-emerald-600 font-medium">-<%= helpers.formatCurrency(order.discount) %></span>
                                                  </div>
                                                <% } %>
                          
                                                <div class="pt-3 border-t border-gray-200">
                                                  <div class="flex justify-between">
                                                    <span class="font-semibold">Total</span>
                                                    <span class="font-semibold"><%= helpers.formatCurrency(order.finalAmount) %></span>
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                          
                                            <!-- Shipping Address -->
                                            <div>
                                              <h4 class="text-sm uppercase tracking-wider text-gray-500 mb-4 font-medium">Shipping Address</h4>
                                              <div class="bg-gray-50 p-4 rounded-lg">
                                                <address class="text-sm text-gray-600 not-italic">
                                                  <strong class="text-gray-800 block mb-1"><%= order.address.name %></strong>
                                                  <span class="inline-block bg-gray-100 text-gray-700 px-2 py-0.5 text-xs rounded mb-2">
                                                    <%= order.address.addressType %>
                                                  </span><br>
                                                  <%= order.address.street %><br>
                                                  <%= order.address.city %>, <%= order.address.state %> <%= order.address.pincode %><br>
                                                  <span class="text-gray-700 mt-2 block">📞 <%= order.address.phone %></span>
                                                </address>
                                              </div>
                                            </div>
                          
                                            <!-- Track Order Button -->
                                            <div>
                                              <button onclick="trackOrder('<%= order._id %>')" 
                                                      class="w-full bg-white border border-blue-200 text-blue-600 hover:bg-blue-50 px-6 py-2.5 rounded-lg text-sm font-medium transition-colors duration-200">
                                                Track Order
                                              </button>
                                              <% if ( order.status === 'Delivered') { %>
                                                <div class="mt-4">
                                                  <a href="/orders/<%= order._id %>/invoice" class="inline-block bg-blue-600 text-white px-6 py-2.5 rounded-lg text-sm font-medium hover:bg-blue-700 transition-colors duration-200">
                                                    Download Invoice
                                                  </a>
                                                </div>
                                              <% } %>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  <% }); %>
                                <% } else { %>
                                  <div class="text-center py-16">
                                    <div class="mb-4">
                                      <svg class="w-16 h-16 mx-auto text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />
                                      </svg>
                                    </div>
                                    <h3 class="text-lg font-medium text-gray-900 mb-2">No orders yet</h3>
                                    <p class="text-gray-500 mb-6">Start exploring our collection to find something you love.</p>
                                    <a href="/products" class="inline-block bg-black text-white px-6 py-2.5 rounded-lg text-sm font-medium hover:bg-gray-800 transition-colors duration-200">
                                      Browse Collection
                                    </a>
                                  </div>
                                <% } %>
                              </div>
                            </div>
                          </div>
                    </div>
                </div> 
            </main>
        </div>
    </div>
</body>
</html>

    <!-- Edit Address Modal -->
    <%- include("../partials/cancelmodal") %>
    <%- include("../partials/returnmodal") %>

    <script>
       

function showCancelModal(orderId, itemId, productName) {
    const modal = document.getElementById('cancelItemModal');
    modal.classList.remove('hidden');
    
    // Set data attributes for the confirm button
    const confirmButton = document.getElementById('confirmCancelItem');
    confirmButton.setAttribute('data-order-id', orderId);
    confirmButton.setAttribute('data-item-id', itemId);
    
    // Update modal text
    document.getElementById('cancelItemName').textContent = productName;
}

function hideCancelModal() {
    document.getElementById('cancelItemModal').classList.add('hidden');
}

async function cancelOrderItem() {
    const confirmButton = document.getElementById('confirmCancelItem');
    const orderId = confirmButton.getAttribute('data-order-id');
    const itemId = confirmButton.getAttribute('data-item-id');
    
    try {
        const response = await fetch(`/orders/${orderId}/items/${itemId}/cancel`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        });
        
        const data = await response.json();
        
        if (response.ok) {
            Swal.fire({
                icon: 'success',
                title: 'Item Cancelled Successfully',
                text: data.walletMessage || 'Your item has been cancelled.',
                confirmButtonColor: '#3085d6'
            }).then(() => {
                location.reload();
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Cancellation Failed',
                text: data.message || 'Failed to cancel item',
                confirmButtonColor: '#3085d6'
            });
        }
    } catch (error) {
        console.error('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An error occurred while cancelling the item',
            confirmButtonColor: '#3085d6'
        });
    } finally {
        hideCancelModal();
    }
}

     

//return order 
function showReturnModal(orderId) {
    const modal = document.getElementById('returnOrderModal');
    const itemsList = document.getElementById('returnItemsList');
    
    // Clear previous items
    itemsList.innerHTML = '';
    itemsList.innerHTML = '<div class="text-gray-500">Loading items...</div>';
    
    // Get order details with populated product information
    fetch(`/api/orders/${orderId}`)
        .then(response => {
            if (!response.ok) {
                throw new Error('Failed to fetch order details');
            }
            return response.json();
        })
        .then(order => {
            itemsList.innerHTML = '';
            
            if (!order.orderedItems || order.orderedItems.length === 0) {
                itemsList.innerHTML = '<div class="text-gray-500">No items available for return</div>';
                return;
            }

            // Filter returnable items
            const returnableItems = order.orderedItems.filter(item => 
                item.status !== 'Cancelled' && 
                item.status !== 'Returned' &&
                item.status !== 'Return Requested' &&
                item.product
            );

            if (returnableItems.length === 0) {
                itemsList.innerHTML = '<div class="text-gray-500">No items are eligible for return</div>';
                return;
            }

            returnableItems.forEach(item => {
                const itemElement = document.createElement('div');
                itemElement.className = 'flex items-center space-x-3 p-2 hover:bg-gray-50 rounded';
                
                // Get product image path
                const productImage = item.product.productImage && item.product.productImage.length > 0
                    ? `/uploads/product-images/${item.product.productImage[0]}`
                    : '/placeholder-image.jpg';
                
                itemElement.innerHTML = `
                    <div class="flex items-center space-x-4 flex-1">
                        <input type="checkbox" 
                               id="return_item_${item._id}" 
                               name="return_items" 
                               value="${item._id}"
                               class="h-4 w-4 text-blue-600 rounded border-gray-300 focus:ring-blue-500">
                        <img src="${productImage}" 
                             alt="${item.product.productName}" 
                             class="h-12 w-12 object-cover rounded">
                        <label for="return_item_${item._id}" class="flex-1">
                            <div class="font-medium text-sm text-gray-700">${item.product.productName}</div>
                            <div class="text-sm text-gray-500">
                                Qty: ${item.quantity} × ${new Intl.NumberFormat('en-US', {
                                    style: 'currency',
                                    currency: 'INR'
                                }).format(item.price)}
                            </div>
                        </label>
                    </div>
                `;
                itemsList.appendChild(itemElement);
            });
        })
        .catch(error => {
            console.error('Error fetching order details:', error);
            itemsList.innerHTML = `
                <div class="text-red-500">
                    Failed to load order items. Please try again later.
                </div>
            `;
        });

    document.getElementById('returnOrderId').value = orderId;
    modal.classList.remove('hidden');
    document.body.classList.add('modal-open');
}

function hideReturnModal() {
    const modal = document.getElementById('returnOrderModal');
    modal.classList.add('hidden');
    document.body.classList.remove('modal-open');
    
    // Reset form
    document.getElementById('returnForm').reset();
    document.getElementById('returnItemsList').innerHTML = '';
}


function validateReturnForm() {
    const selectedItems = document.querySelectorAll('input[name="return_items"]:checked');
    const reason = document.getElementById('returnReason').value;
    
    if (selectedItems.length === 0) {
        alert('Please select at least one item to return');
        return false;
    }
    
    if (!reason) {
        alert('Please select a reason for return');
        return false;
    }
    
    return true;
}

function submitReturn() {
    if (!validateReturnForm()) {
        return;
    }

    const orderId = document.getElementById('returnOrderId').value;
    const reason = document.getElementById('returnReason').value;
    const comments = document.getElementById('returnComments').value;
    const itemId = document.getElementById('returnItemId').value;
    
    // Get selected items
    const selectedItems = Array.from(document.querySelectorAll('input[name="return_items"]:checked'))
        .map(checkbox => checkbox.value);

    // Disable submit button to prevent double submission
    const submitButton = document.querySelector('#returnForm button[type="submit"]');
    submitButton.disabled = true;
    submitButton.innerHTML = 'Processing...';

    fetch('/api/orders/return', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            orderId,
            items: selectedItems,
            reason,
            comments,
            itemId,
        })
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Server returned error response');
        }
        return response.json();
    })
    .then(data => {
        if (data.success) {
            alert('Return request submitted successfully');
            hideReturnModal();
            window.location.reload();
        } else {
            throw new Error(data.message || 'Failed to submit return request');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('An unexpected error occurred while processing your return request. Please try again later.');
    })
    .finally(() => {
        // Re-enable submit button
        submitButton.disabled = false;
        submitButton.innerHTML = 'Submit Return';
    });
}



// track order 

function trackOrder(orderId) {
    // First check if orderId exists
    if (!orderId) {
        alert('Order ID is required');
        return;
    }

    // Show loading indicator (optional)
    const button = event.currentTarget;
    const originalText = button.innerHTML;
    button.innerHTML = '<span class="inline-block">Loading...</span>';
    button.disabled = true;

    // Make the AJAX request
    fetch(`/track-order/${orderId}`, {
        method: 'GET',
        headers: {
            'Accept': 'text/html',
            'X-Requested-With': 'XMLHttpRequest'
        }
    })
    .then(response => {
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        // Since your backend renders a full page, we'll handle the navigation here
        window.location.href = `/track-order/${orderId}`;
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Unable to track order. Please try again.');
    })
    .finally(() => {
        // Restore button state
        button.innerHTML = originalText;
        button.disabled = false;
    });
}

function setDefaultAddress(addressId) {
    fetch(`/setDefaultAddress/${addressId}`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        }
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            location.reload(); // Refresh to update the default address visually
        } else {
            alert('Failed to set default address');
        }
    })
    .catch(error => console.error('Error:', error));
}



// Add event listener to prevent default form submission if the button is within a form
document.addEventListener('DOMContentLoaded', function() {
    const trackButtons = document.querySelectorAll('[onclick^="trackOrder"]');
    trackButtons.forEach(button => {
        button.closest('form')?.addEventListener('submit', function(e) {
            e.preventDefault();
        });
    });
});
  
    </script>
</body>
</html>